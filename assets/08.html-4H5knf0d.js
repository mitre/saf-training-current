import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as r,f as o}from"./app-WeARUK1X.js";const t={},c=o('<h1 id="differences-between-security-benchmark-code-and-traditional-software-projects" tabindex="-1"><a class="header-anchor" href="#differences-between-security-benchmark-code-and-traditional-software-projects" aria-hidden="true">#</a> Differences Between Security Benchmark Code and Traditional Software Projects</h1><p>When planning your team&#39;s approach, remember that a Security Benchmark is only considered &#39;complete and valid&#39; when all requirements for that specific Release or Major Version are met. This differs from traditional software projects where features and capabilities can be incrementally added.</p><h1 id="security-benchmarks-are-release-specific" tabindex="-1"><a class="header-anchor" href="#security-benchmarks-are-release-specific" aria-hidden="true">#</a> Security Benchmarks Are Release-Specific</h1><p>A Security Benchmark and <em><strong>its corresponding InSpec Profile</strong></em> are only applicable within the context of a specific &#39;Release&#39; of that Benchmark.</p><p>The choice between a <code>micro</code> or <code>massive</code> approach depends more on your team&#39;s work style preference.</p><p>Regardless of the approach, the final release of the Benchmark will be the same. The deciding factors for its readiness for release are the expected thresholds, hardening, and validation results.</p><h1 id="main-is-out-of-scope-for-a-benchmark" tabindex="-1"><a class="header-anchor" href="#main-is-out-of-scope-for-a-benchmark" aria-hidden="true">#</a> &#39;main&#39; is <code>out of scope</code> for a Benchmark</h1><p>Benchmarks do not accommodate &#39;incremental requirements&#39;. Therefore, your team should always work off a fork of the last release. If there is a &#39;main&#39; or &#39;development&#39; branch in your profile, it should be considered as a candidate for merging into the next patch or update release.</p>',8),n=[c];function i(s,d){return a(),r("div",null,n)}const l=e(t,[["render",i],["__file","08.html.vue"]]);export{l as default};
