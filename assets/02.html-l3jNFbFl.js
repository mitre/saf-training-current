import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as m,c as h,d as e,e as n,b as i,w as s,f as r}from"./app-WeARUK1X.js";const k={},b=e("h2",{id:"inspec-content-review",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inspec-content-review","aria-hidden":"true"},"#"),n(" InSpec Content Review")],-1),v=r(`<h3 id="inspec-profile-structure" tabindex="-1"><a class="header-anchor" href="#inspec-profile-structure" aria-hidden="true">#</a> InSpec Profile Structure</h3><p>Remember that a <code>profile</code> is a set of automated tests that usually relates directly back to a Security Requirements Benchmark.</p><p>Profiles have two (2) <strong>required</strong> elements:</p><ul><li>An <code>inspec.yml</code> file</li><li>A <code>controls</code> directory</li></ul><p>and <strong>optional</strong> elements such as:</p><ul><li>A <code>libraries</code> directory</li><li>A <code>files</code> directory</li><li>An <code>inputs.yml</code> file</li><li>A <code>README.md</code> file</li></ul><p>InSpec can create the profile structure for you using the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ inspec init profile my_inspec_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This will give you the required files along with some optional files.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ tree my_inspec_profile

  my_inspec_profile
  ├── README.md
  ├── controls
  │   └── example.rb
  └── inspec.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="default-file-structures" tabindex="-1"><a class="header-anchor" href="#default-file-structures" aria-hidden="true">#</a> Default File Structures</h3><h4 id="control-file-structure" tabindex="-1"><a class="header-anchor" href="#control-file-structure" aria-hidden="true">#</a> Control File Structure</h4><p>Let&#39;s take a look at the default ruby file in the <code>controls</code> directory.</p>`,13),f=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("title "),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'sample section'")]),n(`

`),e("span",{class:"token comment"},"# you can also use plain tests"),n(`
describe file`),e("span",{class:"token punctuation"},"("),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'/tmp'")]),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token keyword"},"do"),n(`
  it `),e("span",{class:"token punctuation"},"{"),n(" should be_directory "),e("span",{class:"token punctuation"},"}"),n(`
`),e("span",{class:"token keyword"},"end"),n(`

`),e("span",{class:"token comment"},"# you add controls here"),n(`
control `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'tmp-1.0'")]),n(),e("span",{class:"token keyword"},"do"),n("                        "),e("span",{class:"token comment"},"# A unique ID for this control"),n(`
  impact `),e("span",{class:"token number"},"0.7"),n("                                "),e("span",{class:"token comment"},"# The criticality, if this control fails."),n(`
  title `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'Create /tmp directory'")]),n("             "),e("span",{class:"token comment"},"# A human-readable title"),n(`
  desc `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'An optional description...'")]),n(`
  describe file`),e("span",{class:"token punctuation"},"("),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'/tmp'")]),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token keyword"},"do"),n("                  "),e("span",{class:"token comment"},"# The actual test"),n(`
    it `),e("span",{class:"token punctuation"},"{"),n(" should be_directory "),e("span",{class:"token punctuation"},"}"),n(`
  `),e("span",{class:"token keyword"},"end"),n(`
`),e("span",{class:"token keyword"},"end"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),y=r(`<p>This example shows two tests. Both tests check for the existence of the <code>/tmp</code> directory. The second test provides additional information about the test. Let&#39;s break down each component.</p><ul><li><code>control</code> (line 9) is followed by the control&#39;s name. Each control in a profile has a unique name.</li><li><code>impact</code> (line 10) measures the relative importance of the test and must be a value between 0.0 and 1.0.</li><li><code>title</code> (line 11) defines the control&#39;s purpose.</li><li><code>desc</code> (line 12) provides a more complete description of what the control checks for.</li><li><code>describe</code> (lines 13 — 15) defines the test. Here, the test checks for the existence of the <code>/tmp</code> directory.</li></ul><h4 id="describe-block-structure" tabindex="-1"><a class="header-anchor" href="#describe-block-structure" aria-hidden="true">#</a> Describe Block Structure</h4><p>As with many test frameworks, InSpec code resembles natural language. Here&#39;s the format of a describe block.</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>describe <span class="token operator">&lt;</span> entity <span class="token operator">&gt;</span> <span class="token keyword">do</span>
  it <span class="token punctuation">{</span> <span class="token operator">&lt;</span> expectation <span class="token operator">&gt;</span> <span class="token punctuation">}</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),_={class:"hint-container tip"},g=e("p",{class:"hint-container-title"},"Resources And Matchers",-1),w=e("code",null,"file",-1),x=e("code",null,"< entity >",-1),A={href:"https://docs.chef.io/inspec/resources/",target:"_blank",rel:"noopener noreferrer"},S=e("code",null,"cmp",-1),I=e("code",null,"eq",-1),T=e("code",null,"< expectation >",-1),R={href:"https://docs.chef.io/inspec/matchers/",target:"_blank",rel:"noopener noreferrer"},C=e("h4",{id:"inspec-yml-file-structure",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inspec-yml-file-structure","aria-hidden":"true"},"#"),n(" inspec.yml File Structure")],-1),L=e("p",null,[n("Let's take a look at the default "),e("code",null,"inspec.yml"),n(".")],-1),q=e("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[e("pre",{class:"language-yaml"},[e("code",null,[e("span",{class:"token key atrule"},"name"),e("span",{class:"token punctuation"},":"),n(` my_inspec_profile
`),e("span",{class:"token key atrule"},"title"),e("span",{class:"token punctuation"},":"),n(` InSpec Profile
`),e("span",{class:"token key atrule"},"maintainer"),e("span",{class:"token punctuation"},":"),n(` The Authors
`),e("span",{class:"token key atrule"},"copyright"),e("span",{class:"token punctuation"},":"),n(` The Authors
`),e("span",{class:"token key atrule"},"copyright_email"),e("span",{class:"token punctuation"},":"),n(` you@example.com
`),e("span",{class:"token key atrule"},"license"),e("span",{class:"token punctuation"},":"),n(" Apache"),e("span",{class:"token punctuation"},"-"),e("span",{class:"token number"},"2.0"),n(`
`),e("span",{class:"token key atrule"},"summary"),e("span",{class:"token punctuation"},":"),n(` An InSpec Compliance Profile
`),e("span",{class:"token key atrule"},"version"),e("span",{class:"token punctuation"},":"),n(` 0.1.0
`),e("span",{class:"token key atrule"},"supports"),e("span",{class:"token punctuation"},":"),n(`
  `),e("span",{class:"token key atrule"},"platform"),e("span",{class:"token punctuation"},":"),n(` os

`),e("span",{class:"token comment"},"# Optional sections"),n(`

`),e("span",{class:"token key atrule"},"depends"),e("span",{class:"token punctuation"},":"),n(`
  `),e("span",{class:"token punctuation"},"-"),n(),e("span",{class:"token key atrule"},"name"),e("span",{class:"token punctuation"},":"),n(" < name of the profile from which you can include controls "),e("span",{class:"token punctuation"},">"),n(`
    `),e("span",{class:"token key atrule"},"path"),e("span",{class:"token punctuation"},":"),n(" < relative path to that profile "),e("span",{class:"token punctuation"},">"),n(`

`),e("span",{class:"token key atrule"},"gem_dependencies"),e("span",{class:"token punctuation"},":"),n(`
  `),e("span",{class:"token punctuation"},"-"),n(),e("span",{class:"token key atrule"},"name"),e("span",{class:"token punctuation"},":"),n(" < name of the gem "),e("span",{class:"token punctuation"},">"),n(`
    `),e("span",{class:"token key atrule"},"version"),e("span",{class:"token punctuation"},":"),n(" < version of the gem "),e("span",{class:"token punctuation"},">"),n(`

`),e("span",{class:"token key atrule"},"inputs"),e("span",{class:"token punctuation"},":"),n(`
  `),e("span",{class:"token punctuation"},"-"),n(),e("span",{class:"token key atrule"},"name"),e("span",{class:"token punctuation"},":"),n(" < name of the input "),e("span",{class:"token punctuation"},">"),n(`
    `),e("span",{class:"token key atrule"},"desc"),e("span",{class:"token punctuation"},":"),n(" < description of the input "),e("span",{class:"token punctuation"},">"),n(`
    `),e("span",{class:"token key atrule"},"type"),e("span",{class:"token punctuation"},":"),n(" < data type of the input (String"),e("span",{class:"token punctuation"},","),n(" Array"),e("span",{class:"token punctuation"},","),n(" Numeric"),e("span",{class:"token punctuation"},","),n(" Hash) "),e("span",{class:"token punctuation"},">"),n(`
    `),e("span",{class:"token key atrule"},"value"),e("span",{class:"token punctuation"},":"),n(" < default value for the input "),e("span",{class:"token punctuation"},">"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),D=e("div",{class:"hint-container tip"},[e("p",{class:"hint-container-title"},"Tips"),e("p",null,[e("code",null,"version"),n(" (line 8) is the version of that inspec profile. The best practice is for the version to be bumped after making changes to the profile to pull the latest updates.")])],-1),E={class:"hint-container details"},N=r("<summary>Difference between &#39;inspec.yml&#39; and &#39;inputs.yml&#39;</summary><table><thead><tr><th>inspec.yml</th><th>inputs.yml</th></tr></thead><tbody><tr><td>Required</td><td>Optional</td></tr><tr><td>Should not be renamed</td><td>Can be renamed</td></tr><tr><td>Needs to be at the root of the profile</td><td>Can be anywhere</td></tr><tr><td>Automatically used during execution<br><code>inspec exec profile1</code></td><td>Needs to be passed in during execution<br><code>inspec exec profile1 --input-file &lt;path&gt;</code></td></tr><tr><td>Purpose is to define default input values and profile metadata</td><td>Purpose is to override default input values with parameters for the local environments</td></tr><tr><td>Defined by the author of the profile</td><td>Defined by the user of the profile</td></tr></tbody></table>",2),P=e("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[e("pre",{class:"language-yaml"},[e("code",null,[e("span",{class:"token punctuation"},"-"),n(),e("span",{class:"token key atrule"},"name"),e("span",{class:"token punctuation"},":"),n(` superusers
  `),e("span",{class:"token key atrule"},"desc"),e("span",{class:"token punctuation"},":"),n(),e("span",{class:"token string"},"'List of users with admin privileges'"),n(`
  `),e("span",{class:"token key atrule"},"type"),e("span",{class:"token punctuation"},":"),n(` Array
  `),e("span",{class:"token key atrule"},"value"),e("span",{class:"token punctuation"},":"),n(`
    `),e("span",{class:"token punctuation"},"-"),n(),e("span",{class:"token string"},"'admin'"),n(`
    `),e("span",{class:"token punctuation"},"-"),n(),e("span",{class:"token string"},"'root'"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),B=e("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[e("pre",{class:"language-yaml"},[e("code",null,[e("span",{class:"token key atrule"},"superusers"),e("span",{class:"token punctuation"},":"),n(`
  `),e("span",{class:"token punctuation"},"-"),n(),e("span",{class:"token string"},"'codespaces'"),n(`
  `),e("span",{class:"token punctuation"},"-"),n(),e("span",{class:"token string"},"'kali'"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1);function F(M,V){const o=l("RouterLink"),c=l("CodeTabs"),u=l("ExternalLinkIcon"),d=l("Tabs");return m(),h("div",null,[b,e("p",null,[n("In the "),i(o,{to:"/courses/beginner/"},{default:s(()=>[n("beginner class")]),_:1}),n(", we explained the structure and output of InSpec Profiles. Let's review some content, then practice by revisiting, running, and viewing results of an InSpec profile.")]),v,i(c,{id:"69",data:[{id:"controls/example.rb"}]},{title0:s(({value:t,isActive:a})=>[n("controls/example.rb")]),tab0:s(({value:t,isActive:a})=>[f]),_:1},8,["data"]),y,e("div",_,[g,i(d,{id:"112",data:[{id:"Resources"},{id:"Matchers"}]},{title0:s(({value:t,isActive:a})=>[n("Resources")]),title1:s(({value:t,isActive:a})=>[n("Matchers")]),tab0:s(({value:t,isActive:a})=>[e("p",null,[n("InSpec uses resources like the "),w,n(" resource to aid in control development. These resources can often be used as the "),x,n(" in the describe block. Find a list of resources in the "),e("a",A,[n("InSpec documentation "),i(u)])])]),tab1:s(({value:t,isActive:a})=>[e("p",null,[n("InSpec uses matchers like the "),S,n(" or "),I,n(" to aid in control development. These matchers can often be used as the "),T,n(" in the describe block where the expectation is checking a requirement of that entity. Find a list of matchers in the "),e("a",R,[n("InSpec documentation "),i(u)])])]),_:1})]),C,L,i(c,{id:"131",data:[{id:"inspec.yml"}]},{title0:s(({value:t,isActive:a})=>[n("inspec.yml")]),tab0:s(({value:t,isActive:a})=>[q]),_:1},8,["data"]),e("p",null,[n("This example shows default metadata of the InSpec profile along with the optional sections. Find more information about "),i(o,{to:"/courses/beginner/06.html"},{default:s(()=>[n("inputs")]),_:1}),n(" and "),i(o,{to:"/courses/beginner/10.html"},{default:s(()=>[n("overlays")]),_:1}),n(" in the beginner class.")]),D,e("details",E,[N,i(c,{id:"207",data:[{id:"inspec.yml"},{id:"inputs.yml"}]},{title0:s(({value:t,isActive:a})=>[n("inspec.yml")]),title1:s(({value:t,isActive:a})=>[n("inputs.yml")]),tab0:s(({value:t,isActive:a})=>[P]),tab1:s(({value:t,isActive:a})=>[B]),_:1},8,["data"])])])}const $=p(k,[["render",F],["__file","02.html.vue"]]);export{$ as default};
