import{_ as d}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as c,o as p,c as u,b as o,w as s,d as n,e,f as i}from"./app-WeARUK1X.js";const m={},v=i(`<h2 id="profile-dependencies-overlays" tabindex="-1"><a class="header-anchor" href="#profile-dependencies-overlays" aria-hidden="true">#</a> Profile Dependencies (Overlays)</h2><p>In addition to its own controls, an InSpec profile can leverage controls from one or more other InSpec profiles.</p><p>When a profile depends on controls from other profiles, it can be referred to as an &quot;overlay&quot; or &quot;wrapper&quot; profile. We&#39;ll use the term overlay profile in this section.</p><p>An overlay can include all, select specific, skip some, or modify controls it uses from the profiles it is depending on.</p><div class="language-flow line-numbers-mode" data-ext="flow"><pre class="language-flow"><code>overlay<span class="token operator">=&gt;</span>operation<span class="token operator">:</span> my_nginx_overlay
e<span class="token operator">=&gt;</span>end<span class="token operator">:</span> my_nginx

e<span class="token operator">-</span><span class="token operator">&gt;</span>overlay
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To recap, here are the controls that are in the <code>my_nginx</code> profile:</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>control <span class="token string-literal"><span class="token string">&#39;nginx-version&#39;</span></span> <span class="token keyword">do</span>
  impact <span class="token number">1.0</span>
  title <span class="token string-literal"><span class="token string">&#39;NGINX version&#39;</span></span>
  desc <span class="token string-literal"><span class="token string">&#39;The required version of NGINX should be installed.&#39;</span></span>
  describe nginx <span class="token keyword">do</span>
    its<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;version&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> should cmp <span class="token operator">&gt;=</span> input<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;nginx_version&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>

control <span class="token string-literal"><span class="token string">&#39;nginx-modules&#39;</span></span> <span class="token keyword">do</span>
  impact <span class="token number">1.0</span>
  title <span class="token string-literal"><span class="token string">&#39;NGINX modules&#39;</span></span>
  desc <span class="token string-literal"><span class="token string">&#39;The required NGINX modules should be installed.&#39;</span></span>
  required_modules <span class="token operator">=</span> input<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;nginx_modules&#39;</span></span><span class="token punctuation">)</span>
  describe nginx <span class="token keyword">do</span>
    required_modules<span class="token punctuation">.</span><span class="token keyword">each</span> <span class="token keyword">do</span> <span class="token operator">|</span>required_module<span class="token operator">|</span>
      its<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;modules&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> should <span class="token keyword">include</span> required_module <span class="token punctuation">}</span>
    <span class="token keyword">end</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>

control <span class="token string-literal"><span class="token string">&#39;nginx-conf-file&#39;</span></span> <span class="token keyword">do</span>
  impact <span class="token number">1.0</span>
  title <span class="token string-literal"><span class="token string">&#39;NGINX configuration file&#39;</span></span>
  desc <span class="token string-literal"><span class="token string">&#39;The NGINX config file should exist.&#39;</span></span>
  describe file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/etc/nginx/nginx.conf&#39;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span>
    it <span class="token punctuation">{</span> should be_file <span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>

control <span class="token string-literal"><span class="token string">&#39;nginx-conf-perms&#39;</span></span> <span class="token keyword">do</span>
  impact <span class="token number">1.0</span>
  title <span class="token string-literal"><span class="token string">&#39;NGINX configuration permissions&#39;</span></span>
  desc <span class="token string-literal"><span class="token string">&#39;The NGINX config file should owned by root, be writable only by owner, and not writeable or and readable by others.&#39;</span></span>
  describe file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/etc/nginx/nginx.conf&#39;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span>
    it <span class="token punctuation">{</span> should be_owned_by <span class="token string-literal"><span class="token string">&#39;root&#39;</span></span> <span class="token punctuation">}</span>
    it <span class="token punctuation">{</span> should be_grouped_into <span class="token string-literal"><span class="token string">&#39;root&#39;</span></span> <span class="token punctuation">}</span>
    it <span class="token punctuation">{</span> should_not be_readable<span class="token punctuation">.</span>by<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;others&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    it <span class="token punctuation">{</span> should_not be_writable<span class="token punctuation">.</span>by<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;others&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    it <span class="token punctuation">{</span> should_not be_executable<span class="token punctuation">.</span>by<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;others&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>

control <span class="token string-literal"><span class="token string">&#39;nginx-shell-access&#39;</span></span> <span class="token keyword">do</span>
  impact <span class="token number">1.0</span>
  title <span class="token string-literal"><span class="token string">&#39;NGINX shell access&#39;</span></span>
  desc <span class="token string-literal"><span class="token string">&#39;The NGINX shell access should be restricted to admin users.&#39;</span></span>
  describe users<span class="token punctuation">.</span>shells<span class="token punctuation">(</span><span class="token regex-literal"><span class="token regex">/bash/</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>usernames <span class="token keyword">do</span>
    it <span class="token punctuation">{</span> should be_in input<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;admin_users&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="creating-the-overlay" tabindex="-1"><a class="header-anchor" href="#creating-the-overlay" aria-hidden="true">#</a> Creating the Overlay</h3><h4 id="mini-quiz-do-you-remember-how-to-initialize-a-profile" tabindex="-1"><a class="header-anchor" href="#mini-quiz-do-you-remember-how-to-initialize-a-profile" aria-hidden="true">#</a> Mini Quiz: Do you remember how to initialize a profile?</h4><details class="hint-container details"><summary>How to initialize the overlay</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>inspec init profile my_nginx_overlay
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The terminal output should look like the following:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Create new profile at /<span class="token operator">&lt;</span>pwd<span class="token operator">&gt;</span>/my_nginx_overlay
 * Create directory controls
 * Create <span class="token function">file</span> controls/example.rb
 * Create <span class="token function">file</span> inspec.yml
 * Create <span class="token function">file</span> README.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>In this example, we will rename the <code>example.rb</code> to <code>overlay.rb</code> to avoid confusion.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>tree my_nginx_overlay
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Which should look like:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>      my_nginx_overlay
      ├── README.md
      ├── controls
      │   └── overlay.rb
      └── inspec.yml

      <span class="token number">1</span> directory, <span class="token number">3</span> files
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="defining-the-profile-dependency" tabindex="-1"><a class="header-anchor" href="#defining-the-profile-dependency" aria-hidden="true">#</a> Defining the Profile Dependency</h3><p>For a profile to use controls from another profile, the dependency needs to be included in the <code>depends</code> section of the overlay&#39;s <code>inspec.yml</code> file. For example, you can develop <code>my_nginx_overlay</code> that uses controls from the <code>my_nginx</code> profile. In this case, the <code>depends</code> section of <code>inspec.yml</code> of <code>my_nginx_overlay</code> should list the name and location of <code>my_nginx</code>. One way of declaring the dependency is:</p>`,17),h=n("div",{class:"language-yaml line-numbers-mode","data-ext":"yml"},[n("pre",{class:"language-yaml"},[n("code",null,[n("span",{class:"token key atrule"},"name"),n("span",{class:"token punctuation"},":"),e(` my_nginx_overlay
`),n("span",{class:"token comment"},"# Metadata"),e(`

`),n("span",{class:"token key atrule"},"depends"),n("span",{class:"token punctuation"},":"),e(`
  `),n("span",{class:"token punctuation"},"-"),e(),n("span",{class:"token key atrule"},"name"),n("span",{class:"token punctuation"},":"),e(` my_nginx
    `),n("span",{class:"token key atrule"},"path"),n("span",{class:"token punctuation"},":"),e(" ../my_nginx "),n("span",{class:"token comment"},"# {path relative to the overlay}"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),b=n("p",null,[e("Once defined in the "),n("code",null,"inspec.yml"),e(" file, controls from the included profiles can be used!")],-1),g={class:"hint-container info"},k=n("p",{class:"hint-container-title"},"More dependency info",-1),y=n("p",null,[e("Note that a dependency definition can lead to an HTTP/S path or a .git link, just like how "),n("code",null,"inspec exec"),e(" can reference profiles that live on the network.")],-1),f={href:"https://www.inspec.io/docs/reference/profiles/#sts=Profile%20Dependencies",target:"_blank",rel:"noopener noreferrer"},_=i('<h3 id="including-all-controls" tabindex="-1"><a class="header-anchor" href="#including-all-controls" aria-hidden="true">#</a> Including All Controls</h3><p>After defining the dependency in the <code>inspec.yml</code> of <code>my_nginx_overlay</code>, controls from <code>my_nginx</code> are available to be used in the overlay. By using <code>include_controls &lt;profile&gt;</code> in the <code>overlay.rb</code> of the overlay profile, all controls from the named profile will be executed every time the overlay is executed. Below you can see an example of an <code>overlay.rb</code> file in the <code>controls</code> folder of the overlay.</p>',2),x=n("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[n("pre",{class:"language-ruby"},[n("code",null,[e("include_controls "),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'my_nginx'")]),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),w=i('<p>In the example above, every time <code>my_nginx_overlay</code> profile is executed, all the controls from <code>my_nginx</code> profile are also executed. Therefore, the following controls would be executed for <code>my_nginx_overlay</code>:</p><table><thead><tr><th>Controls</th><th>Executed</th></tr></thead><tbody><tr><td>nginx-version</td><td>✓</td></tr><tr><td>nginx-modules</td><td>✓</td></tr><tr><td>nginx-conf-file</td><td>✓</td></tr><tr><td>nginx-conf-perms</td><td>✓</td></tr><tr><td>nginx-shell-access</td><td>✓</td></tr></tbody></table><h3 id="skipping-a-control" tabindex="-1"><a class="header-anchor" href="#skipping-a-control" aria-hidden="true">#</a> Skipping a Control</h3><p>What if you don&#39;t want to run one of the controls from the included profile? Luckily, it is not necessary to maintain a slightly-modified copy of the included profile just to delete a control. The <code>skip_control</code> command tells InSpec not to run a particular control.</p>',4),I=n("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[n("pre",{class:"language-ruby"},[n("code",null,[e("include_controls "),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'my_nginx'")]),e(),n("span",{class:"token keyword"},"do"),e(`
  skip_control `),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'nginx-conf-perms'")]),e(`
`),n("span",{class:"token keyword"},"end"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),N=i('<p>In the above example, all controls from <code>my_nginx</code> profile will be executed, <strong>except</strong> for control <code>nginx-conf-perms</code>, every time <code>my_nginx_overlay</code> is executed. Therefore, the following controls will be executed for <code>my_nginx_overlay</code>:</p><table><thead><tr><th>Controls</th><th>Executed</th></tr></thead><tbody><tr><td>nginx-version</td><td>✓</td></tr><tr><td>nginx-modules</td><td>✓</td></tr><tr><td>nginx-conf-file</td><td>✓</td></tr><tr><td>nginx-conf-perms</td><td>✗</td></tr><tr><td>nginx-shell-access</td><td>✓</td></tr></tbody></table><h3 id="selectively-including-controls" tabindex="-1"><a class="header-anchor" href="#selectively-including-controls" aria-hidden="true">#</a> Selectively Including Controls</h3><p>If there are only a handful of controls that should be executed from an included profile, it’s not necessary to skip all the unneeded controls, or worse, copy/paste those controls bit-for-bit into your profile<sup class="footnote-ref"><a href="#footnote1">[1]</a><a class="footnote-anchor" id="footnote-ref1"></a></sup>. Instead, use the <code>require_controls</code> command.</p>',4),q=n("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[n("pre",{class:"language-ruby"},[n("code",null,[e("require_controls "),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'my_nginx'")]),e(),n("span",{class:"token keyword"},"do"),e(`
  control `),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'nginx-version'")]),e(`
  control `),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'nginx-modules'")]),e(`
`),n("span",{class:"token keyword"},"end"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),A=i('<p>Whenever <code>my_nginx_overlay</code> is executed, it will run only the controls from <code>my_nginx</code> that are specified in the <code>require_controls</code> block. In the case, the following controls would be executed:</p><table><thead><tr><th>Controls</th><th>Executed</th></tr></thead><tbody><tr><td>nginx-version</td><td>✓</td></tr><tr><td>nginx-modules</td><td>✓</td></tr><tr><td>nginx-conf-file</td><td>✗</td></tr><tr><td>nginx-conf-perms</td><td>✗</td></tr><tr><td>nginx-shell-access</td><td>✗</td></tr></tbody></table><p>Controls <code>nginx-conf-file</code>, <code>nginx-conf-perms</code>, and <code>nginx-shell-access</code> would not be executed, just as if they were manually skipped. This method of including specific controls ensures only the controls specified are executed.</p><div class="hint-container warning"><p class="hint-container-title">Warning</p><p>If new controls are added to a later version of <code>my_nginx</code>, they would not be executed unless explicitly required in this scenario.</p></div><h3 id="modifying-a-control" tabindex="-1"><a class="header-anchor" href="#modifying-a-control" aria-hidden="true">#</a> Modifying a Control</h3><p>Let’s say a particular control from an included profile should still run, but the impact level set in the control isn’t appropriate. When a control is included or required, it can also be modified!</p>',6),C=n("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[n("pre",{class:"language-ruby"},[n("code",null,[e("include_controls "),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'my_nginx'")]),e(),n("span",{class:"token keyword"},"do"),e(`
  control `),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'nginx-modules'")]),e(),n("span",{class:"token keyword"},"do"),e(`
    impact `),n("span",{class:"token number"},"0.5"),e(`
  `),n("span",{class:"token keyword"},"end"),e(`
`),n("span",{class:"token keyword"},"end"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=n("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[n("pre",{class:"language-ruby"},[n("code",null,[e("require_controls "),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'my_nginx'")]),e(),n("span",{class:"token keyword"},"do"),e(`
  control `),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'nginx-modules'")]),e(),n("span",{class:"token keyword"},"do"),e(`
    impact `),n("span",{class:"token number"},"0.5"),e(`
  `),n("span",{class:"token keyword"},"end"),e(`
  control `),n("span",{class:"token string-literal"},[n("span",{class:"token string"},"'nginx-conf-file'")]),e(`
`),n("span",{class:"token keyword"},"end"),e(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),T=i('<p>In the above example, all included or required controls from <code>my_nginx</code> profile are executed. However, should control <code>nginx-modules</code> fail, it will be raised with an impact of <code>0.5</code> instead of the originally-intended impact of <code>1.0</code>.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p>Any fields that you <em>do not</em> explicitly modify in an included control will not be changed from the baseline.</p><p>Therefore, you can import a control and only override a single field like the <code>impact</code> while leaving the actual control code and the rest of the metadata tags untouched.</p></div><h3 id="additional-examples" tabindex="-1"><a class="header-anchor" href="#additional-examples" aria-hidden="true">#</a> Additional Examples</h3><p>Let&#39;s poke around a few more examples of inheritance.</p>',4),E={href:"https://github.com/mitre/helloworld-web-baseline",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/mitre/sample-rhel8-overlay",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/mitre/sample-mysql-overlay",target:"_blank",rel:"noopener noreferrer"},G={href:"https://github.com/mitre/aws-rds-oracle-database-19c-cis-baseline",target:"_blank",rel:"noopener noreferrer"},X={class:"hint-container note"},M=n("p",{class:"hint-container-title"},"Cloud environment overlays",-1),O={href:"https://saf.mitre.org/libs/validation",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"ec2-user",-1),L=i('<hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="footnote1" class="footnote-item"><p>Copying and pasting controls from a profile, instead of creating an overlay, can lead to important updates not being reflected. Overlays keep the profile changes in sync as they pull the latest updates. <a href="#footnote-ref1" class="footnote-backref">↩︎</a></p></li></ol></section>',2);function P(R,B){const r=c("CodeTabs"),l=c("ExternalLinkIcon");return p(),u("div",null,[v,o(r,{id:"45",data:[{id:"my_nginx_overlay/inspec.yml"}]},{title0:s(({value:a,isActive:t})=>[e("my_nginx_overlay/inspec.yml")]),tab0:s(({value:a,isActive:t})=>[h]),_:1},8,["data"]),b,n("div",g,[k,y,n("p",null,[e("See the docs' "),n("a",f,[e("Profile Dependencies"),o(l)]),e(" section for details.")])]),_,o(r,{id:"67",data:[{id:"my_nginx_overlay/controls/overlay.rb"}]},{title0:s(({value:a,isActive:t})=>[e("my_nginx_overlay/controls/overlay.rb")]),tab0:s(({value:a,isActive:t})=>[x]),_:1},8,["data"]),w,o(r,{id:"135",data:[{id:"my_nginx_overlay/controls/overlay.rb"}]},{title0:s(({value:a,isActive:t})=>[e("my_nginx_overlay/controls/overlay.rb")]),tab0:s(({value:a,isActive:t})=>[I]),_:1},8,["data"]),N,o(r,{id:"203",data:[{id:"my_nginx_overlay/controls/overlay.rb"}]},{title0:s(({value:a,isActive:t})=>[e("my_nginx_overlay/controls/overlay.rb")]),tab0:s(({value:a,isActive:t})=>[q]),_:1},8,["data"]),A,o(r,{id:"279",data:[{id:"include_controls"},{id:"require_controls"}]},{title0:s(({value:a,isActive:t})=>[e("include_controls")]),title1:s(({value:a,isActive:t})=>[e("require_controls")]),tab0:s(({value:a,isActive:t})=>[C]),tab1:s(({value:a,isActive:t})=>[S]),_:1}),T,n("ul",null,[n("li",null,[n("a",E,[e("Sample Hello World Web "),o(l)])]),n("li",null,[n("a",W,[e("Sample RHEL8 Overlay "),o(l)])]),n("li",null,[n("a",D,[e("Sample MySQL Overlay "),o(l)])]),n("li",null,[n("a",G,[e("AWS RDS Oracle 19c "),o(l)]),e(" (Advanced)")])]),n("div",X,[M,n("p",null,[e("MITRE SAF's "),n("a",O,[e("Validation library"),o(l)]),e(" includes several AWS RDS overlays for common databases. Cloud environment deployment often requires an overlay to be written for the underlying technology. For example, suddenly every system has a CSP-default account (e.g. "),z,e(").")])]),L])}const F=d(m,[["render",P],["__file","10.html.vue"]]);export{F as default};
