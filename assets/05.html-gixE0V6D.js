import{_ as u}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as d,c as p,d as n,b as t,e as s,w as e,f as c}from"./app-WeARUK1X.js";const m={},b=c(`<h2 id="writing-inspec-controls" tabindex="-1"><a class="header-anchor" href="#writing-inspec-controls" aria-hidden="true">#</a> Writing InSpec Controls</h2><p>Let&#39;s work through some example requirements to write InSpec controls.</p><h3 id="security-configuration-requirements" tabindex="-1"><a class="header-anchor" href="#security-configuration-requirements" aria-hidden="true">#</a> Security &amp; Configuration Requirements</h3><p>We write InSpec controls to test some target based on security guidance. Here, let&#39;s verify that the NGINX instance had been configured to meet the following requirements:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">1</span>. NGINX version <span class="token number">1.10</span>.3 or later.
<span class="token number">2</span>. The following NGINX modules should be installed:
   * <span class="token variable"><span class="token variable">\`</span>http_ssl<span class="token variable">\`</span></span>
   * <span class="token variable"><span class="token variable">\`</span>stream_ssl<span class="token variable">\`</span></span>
   * <span class="token variable"><span class="token variable">\`</span>mail_ssl<span class="token variable">\`</span></span>
<span class="token number">3</span>. The NGINX configuration <span class="token function">file</span> - <span class="token variable"><span class="token variable">\`</span>/etc/nginx/nginx.conf<span class="token variable">\`</span></span>- should exist as a file.
<span class="token number">4</span>. The NGINX configuration <span class="token function">file</span> should:
   * be owned by the <span class="token variable"><span class="token variable">\`</span>root<span class="token variable">\`</span></span> user and group.
   * not be readable, writeable, or executable by others.
<span class="token number">5</span>. The NGINX shell access should be restricted to admin users.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="requirement-1-nginx-version" tabindex="-1"><a class="header-anchor" href="#requirement-1-nginx-version" aria-hidden="true">#</a> Requirement (1) - NGINX Version</h3><p>The first requirement is for the NGINX version to be <code>1.10.3 or later</code>.</p><p>We can check this using the InSpec <code>cmp</code> matcher.</p><p>Replace the contents of <code>my_nginx/controls/example.rb</code> with this:</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>control <span class="token string-literal"><span class="token string">&#39;nginx-version&#39;</span></span> <span class="token keyword">do</span>
  impact <span class="token number">1.0</span>
  title <span class="token string-literal"><span class="token string">&#39;NGINX version&#39;</span></span>
  desc <span class="token string-literal"><span class="token string">&#39;The required version of NGINX should be installed.&#39;</span></span>
  describe nginx <span class="token keyword">do</span>
    its<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;version&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> should cmp <span class="token operator">&gt;=</span> <span class="token string-literal"><span class="token string">&#39;1.10.3&#39;</span></span> <span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),v={class:"hint-container tip"},k=n("p",{class:"hint-container-title"},"The `nginx_conf` resource docs",-1),g={href:"https://www.inspec.io/docs/reference/resources/nginx_conf/",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"nginx_conf",-1),x=n("p",null,[s("The test has an impact of 1.0, meaning it is most critical. A failure might indicate to the team that this issue should be resolved as soon as possible, likely by upgrading NGINX to a newer version. The test compares "),n("code",null,"nginx.version"),s(" against version 1.10.3.")],-1),f=n("code",null,"cmp",-1),_={href:"https://www.inspec.io/docs/reference/matchers/",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"cmp",-1),y=n("code",null,"cmp",-1),I=n("p",null,[s("Next, run "),n("code",null,"inspec exec"),s(" to execute the profile on the remote target.")],-1),T=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("inspec "),n("span",{class:"token builtin class-name"},"exec"),s(" ./my_nginx "),n("span",{class:"token parameter variable"},"-t"),s(` docker://nginx
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),w=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("inspec "),n("span",{class:"token builtin class-name"},"exec"),s(" /root/my_nginx "),n("span",{class:"token parameter variable"},"-t"),s(" docker://"),n("span",{class:"token punctuation"},"{"),s("DOCKER_CONTAINER_ID or DOCKER_CONTAINER_NAME"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),A=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("  Profile: InSpec Profile "),n("span",{class:"token punctuation"},"("),s("my_nginx"),n("span",{class:"token punctuation"},")"),s(`
  Version: `),n("span",{class:"token number"},"0.1"),s(`.0
  Target:  docker://DOCKER_CONTAINER_ID
  Target ID: TARGET_ID

    ✔  nginx-version: NGINX version
       ✔  Nginx Environment version should `),n("span",{class:"token function"},"cmp"),s(),n("span",{class:"token operator"},">="),s(),n("span",{class:"token string"},'"1.10.3"'),s(`


  Profile Summary: `),n("span",{class:"token number"},"1"),s(" successful control, "),n("span",{class:"token number"},"0"),s(" control failures, "),n("span",{class:"token number"},"0"),s(` controls skipped
  Test Summary: `),n("span",{class:"token number"},"1"),s(" successful, "),n("span",{class:"token number"},"0"),s(" failures, "),n("span",{class:"token number"},"0"),s(` skipped
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),E=c(`<p>You see that the test passes.</p><h3 id="requirement-2-nginx-modules-are-installed" tabindex="-1"><a class="header-anchor" href="#requirement-2-nginx-modules-are-installed" aria-hidden="true">#</a> Requirement (2) - NGINX Modules are Installed</h3><p>The second requirement verifies that our required modules are installed.</p><ul><li>http_ssl</li><li>stream_ssl</li><li>mail_ssl</li></ul><p>Append your control file to add this describe block:</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>control <span class="token string-literal"><span class="token string">&#39;nginx-modules&#39;</span></span> <span class="token keyword">do</span>
  impact <span class="token number">1.0</span>
  title <span class="token string-literal"><span class="token string">&#39;NGINX modules&#39;</span></span>
  desc <span class="token string-literal"><span class="token string">&#39;The required NGINX modules should be installed.&#39;</span></span>
  describe nginx <span class="token keyword">do</span>
    its<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;modules&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> should <span class="token keyword">include</span> <span class="token string-literal"><span class="token string">&#39;http_ssl&#39;</span></span> <span class="token punctuation">}</span>
    its<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;modules&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> should <span class="token keyword">include</span> <span class="token string-literal"><span class="token string">&#39;stream_ssl&#39;</span></span> <span class="token punctuation">}</span>
    its<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;modules&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> should <span class="token keyword">include</span> <span class="token string-literal"><span class="token string">&#39;mail_ssl&#39;</span></span> <span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The second control resembles the first; however, this version uses multiple <code>its</code> statements and the <code>nginx.modules</code> method. The <code>nginx.modules</code> method returns a list; the built-in <code>include</code> matcher verifies whether a value belongs to a given list.</p><p>Run <code>inspec exec</code> on the target.</p>`,8),q=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("inspec "),n("span",{class:"token builtin class-name"},"exec"),s(" ./my_nginx "),n("span",{class:"token parameter variable"},"-t"),s(` docker://nginx
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),C=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("inspec "),n("span",{class:"token builtin class-name"},"exec"),s(" /root/my_nginx "),n("span",{class:"token parameter variable"},"-t"),s(" docker://"),n("span",{class:"token punctuation"},"{"),s("DOCKER_CONTAINER_ID or DOCKER_CONTAINER_NAME"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),G=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("  Profile: InSpec Profile "),n("span",{class:"token punctuation"},"("),s("my_nginx"),n("span",{class:"token punctuation"},")"),s(`
  Version: `),n("span",{class:"token number"},"0.1"),s(`.0
  Target:  docker://DOCKER_CONTAINER_ID
  Target ID: TARGET_ID

    ✔  nginx-version: NGINX version
       ✔  Nginx Environment version should `),n("span",{class:"token function"},"cmp"),s(),n("span",{class:"token operator"},">="),s(),n("span",{class:"token string"},'"1.10.3"'),s(`
    ✔  nginx-modules: NGINX version
       ✔  Nginx Environment modules should include `),n("span",{class:"token string"},'"http_ssl"'),s(`
       ✔  Nginx Environment modules should include `),n("span",{class:"token string"},'"stream_ssl"'),s(`
       ✔  Nginx Environment modules should include `),n("span",{class:"token string"},'"mail_ssl"'),s(`


  Profile Summary: `),n("span",{class:"token number"},"2"),s(" successful controls, "),n("span",{class:"token number"},"0"),s(" control failures, "),n("span",{class:"token number"},"0"),s(` controls skipped
  Test Summary: `),n("span",{class:"token number"},"4"),s(" successful, "),n("span",{class:"token number"},"0"),s(" failures, "),n("span",{class:"token number"},"0"),s(` skipped
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=c(`<p>This time, both controls pass.</p><h3 id="requirement-3-the-nginx-conf-file" tabindex="-1"><a class="header-anchor" href="#requirement-3-the-nginx-conf-file" aria-hidden="true">#</a> Requirement (3) - The <code>nginx_conf</code> file</h3><p>The third requirement verifies that the NGINX configuration file - <code>/etc/nginx/nginx.conf</code> - exists as a file.</p><p>Append this describe block to your control file:</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>control <span class="token string-literal"><span class="token string">&#39;nginx-conf-file&#39;</span></span> <span class="token keyword">do</span>
  impact <span class="token number">1.0</span>
  title <span class="token string-literal"><span class="token string">&#39;NGINX configuration file&#39;</span></span>
  desc <span class="token string-literal"><span class="token string">&#39;The NGINX config file should exist as a file.&#39;</span></span>
  describe file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/etc/nginx/nginx.conf&#39;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span>
    it <span class="token punctuation">{</span> should be_file <span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run <code>inspec exec</code> on the target.</p>`,6),O=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("inspec "),n("span",{class:"token builtin class-name"},"exec"),s(" ./my_nginx "),n("span",{class:"token parameter variable"},"-t"),s(` docker://nginx
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),X=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("inspec "),n("span",{class:"token builtin class-name"},"exec"),s(" /root/my_nginx "),n("span",{class:"token parameter variable"},"-t"),s(" docker://"),n("span",{class:"token punctuation"},"{"),s("DOCKER_CONTAINER_ID or DOCKER_CONTAINER_NAME"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),D=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("Profile:   InSpec Profile "),n("span",{class:"token punctuation"},"("),s("my_nginx"),n("span",{class:"token punctuation"},")"),s(`
Version:   `),n("span",{class:"token number"},"0.1"),s(`.0
Target:  docker://DOCKER_CONTAINER_ID
Target ID: TARGET_ID

  ✔  nginx-version: NGINX version
     ✔  Nginx Environment version is expected to `),n("span",{class:"token function"},"cmp"),s(),n("span",{class:"token operator"},">="),s(),n("span",{class:"token string"},'"1.10.3"'),s(`
  ✔  nginx-modules: NGINX modules
     ✔  Nginx Environment modules is expected to include `),n("span",{class:"token string"},'"http_ssl"'),s(`
     ✔  Nginx Environment modules is expected to include `),n("span",{class:"token string"},'"stream_ssl"'),s(`
     ✔  Nginx Environment modules is expected to include `),n("span",{class:"token string"},'"mail_ssl"'),s(`
  ✔  nginx-conf-file: NGINX configuration `),n("span",{class:"token function"},"file"),s(`
     ✔  File /etc/nginx/nginx.conf is expected to be `),n("span",{class:"token function"},"file"),s(`


Profile Summary: `),n("span",{class:"token number"},"3"),s(" successful controls, "),n("span",{class:"token number"},"0"),s(" control failures, "),n("span",{class:"token number"},"0"),s(` controls skipped
Test Summary: `),n("span",{class:"token number"},"5"),s(" successful, "),n("span",{class:"token number"},"0"),s(" failures, "),n("span",{class:"token number"},"0"),s(` skipped
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),S=c(`<h3 id="requirement-4-permission-on-the-nginx-conf-file" tabindex="-1"><a class="header-anchor" href="#requirement-4-permission-on-the-nginx-conf-file" aria-hidden="true">#</a> Requirement (4) - Permission on the <code>nginx_conf</code> file</h3><p>The fourth requirement verifies that the NGINX configuration file, <code>/etc/nginx/nginx.conf</code>:</p><ul><li>is owned by the root user and group.</li><li>is not be readable, writeable, or executable by others.</li></ul><p>Append your control file to add this describe block:</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>control <span class="token string-literal"><span class="token string">&#39;nginx-conf-perms&#39;</span></span> <span class="token keyword">do</span>
  impact <span class="token number">1.0</span>
  title <span class="token string-literal"><span class="token string">&#39;NGINX configuration&#39;</span></span>
  desc <span class="token string-literal"><span class="token string">&#39;The NGINX config file should owned by root, be writable only by owner, and not writeable or and readable by others.&#39;</span></span>
  describe file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/etc/nginx/nginx.conf&#39;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span>
    it <span class="token punctuation">{</span> should be_owned_by <span class="token string-literal"><span class="token string">&#39;root&#39;</span></span> <span class="token punctuation">}</span>
    it <span class="token punctuation">{</span> should be_grouped_into <span class="token string-literal"><span class="token string">&#39;root&#39;</span></span> <span class="token punctuation">}</span>
    it <span class="token punctuation">{</span> should_not be_readable<span class="token punctuation">.</span>by<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;others&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    it <span class="token punctuation">{</span> should_not be_writable<span class="token punctuation">.</span>by<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;others&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    it <span class="token punctuation">{</span> should_not be_executable<span class="token punctuation">.</span>by<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;others&#39;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),F={class:"hint-container tip"},P=n("p",{class:"hint-container-title"},"The `file` resource docs",-1),K={href:"https://www.inspec.io/docs/reference/resources/file/",target:"_blank",rel:"noopener noreferrer"},V=n("code",null,"file",-1),M=n("p",null,[s("The first 2 tests use "),n("code",null,"should"),s(" to verify the "),n("code",null,"root"),s(" owner and group. The last 3 tests use "),n("code",null,"should_not"),s(" to verify that the file is not readable, writable, or executable by others.")],-1),B=n("p",null,[s("Run "),n("code",null,"inspec exec"),s(" on the target.")],-1),L=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("inspec "),n("span",{class:"token builtin class-name"},"exec"),s(" ./my_nginx "),n("span",{class:"token parameter variable"},"-t"),s(` docker://nginx
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),W=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("inspec "),n("span",{class:"token builtin class-name"},"exec"),s(" /root/my_nginx "),n("span",{class:"token parameter variable"},"-t"),s(" docker://"),n("span",{class:"token punctuation"},"{"),s("DOCKER_CONTAINER_ID or DOCKER_CONTAINER_NAME"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),Y=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("Profile: InSpec Profile "),n("span",{class:"token punctuation"},"("),s("my_nginx"),n("span",{class:"token punctuation"},")"),s(`
Version: `),n("span",{class:"token number"},"0.1"),s(`.0
Target:  docker://DOCKER_CONTAINER_ID
Target ID: TARGET_ID

  ✔  nginx-version: NGINX version
     ✔  Nginx Environment version is expected to `),n("span",{class:"token function"},"cmp"),s(),n("span",{class:"token operator"},">="),s(),n("span",{class:"token string"},'"1.10.3"'),s(`
  ✔  nginx-modules: NGINX modules
     ✔  Nginx Environment modules is expected to include `),n("span",{class:"token string"},'"http_ssl"'),s(`
     ✔  Nginx Environment modules is expected to include `),n("span",{class:"token string"},'"stream_ssl"'),s(`
     ✔  Nginx Environment modules is expected to include `),n("span",{class:"token string"},'"mail_ssl"'),s(`
  ✔  nginx-conf-file: NGINX configuration `),n("span",{class:"token function"},"file"),s(`
     ✔  File /etc/nginx/nginx.conf is expected to be `),n("span",{class:"token function"},"file"),s(`
  ×  nginx-conf-perms: NGINX configuration `),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),s(" failed"),n("span",{class:"token punctuation"},")"),s(`
     ✔  File /etc/nginx/nginx.conf is expected to be owned by `),n("span",{class:"token string"},'"root"'),s(`
     ✔  File /etc/nginx/nginx.conf is expected to be grouped into `),n("span",{class:"token string"},'"root"'),s(`
     ×  File /etc/nginx/nginx.conf is expected not to be readable by others
     expected File /etc/nginx/nginx.conf not to be readable by others
     ✔  File /etc/nginx/nginx.conf is expected not to be writable by others
     ✔  File /etc/nginx/nginx.conf is expected not to be executable by others


Profile Summary: `),n("span",{class:"token number"},"3"),s(" successful controls, "),n("span",{class:"token number"},"1"),s(" control failure, "),n("span",{class:"token number"},"0"),s(` controls skipped
Test Summary: `),n("span",{class:"token number"},"9"),s(" successful, "),n("span",{class:"token number"},"1"),s(" failure, "),n("span",{class:"token number"},"0"),s(` skipped
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),U=c(`<p>This time you see a failure. You discover that <code>/etc/nginx/nginx.conf</code> is potentially readable by others. Because this control also has an impact of 1.0, your team may need to investigate further.</p><h3 id="requirement-5-nginx-shell-access" tabindex="-1"><a class="header-anchor" href="#requirement-5-nginx-shell-access" aria-hidden="true">#</a> Requirement (5) - NGINX shell access</h3><p>The last requirement checks whether NGINX shell access is provided to non-admin users. In this case, access to <code>bash</code> needs to be restricted to admin users.</p><p>Append this describe block to your control file:</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>control <span class="token string-literal"><span class="token string">&#39;nginx-shell-access&#39;</span></span> <span class="token keyword">do</span>
  impact <span class="token number">1.0</span>
  title <span class="token string-literal"><span class="token string">&#39;NGINX shell access&#39;</span></span>
  desc <span class="token string-literal"><span class="token string">&#39;The NGINX shell access should be restricted to admin users.&#39;</span></span>
  describe users<span class="token punctuation">.</span>shells<span class="token punctuation">(</span><span class="token regex-literal"><span class="token regex">/bash/</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>usernames <span class="token keyword">do</span>
    it <span class="token punctuation">{</span> should be_in <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;admin&#39;</span></span><span class="token punctuation">]</span><span class="token punctuation">}</span>
  <span class="token keyword">end</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run <code>inspec exec</code> on the target.</p>`,6),z=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("inspec "),n("span",{class:"token builtin class-name"},"exec"),s(" ./my_nginx "),n("span",{class:"token parameter variable"},"-t"),s(` docker://nginx
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),H=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("inspec "),n("span",{class:"token builtin class-name"},"exec"),s(" /root/my_nginx "),n("span",{class:"token parameter variable"},"-t"),s(" docker://"),n("span",{class:"token punctuation"},"{"),s("DOCKER_CONTAINER_ID or DOCKER_CONTAINER_NAME"),n("span",{class:"token punctuation"},"}"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),j=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[s("Profile: InSpec Profile "),n("span",{class:"token punctuation"},"("),s("my_nginx"),n("span",{class:"token punctuation"},")"),s(`
Version: `),n("span",{class:"token number"},"0.1"),s(`.0
Target:  docker://DOCKER_CONTAINER_ID
Target ID: TARGET_ID

  ✔  nginx-version: NGINX version
     ✔  Nginx Environment version is expected to `),n("span",{class:"token function"},"cmp"),s(),n("span",{class:"token operator"},">="),s(),n("span",{class:"token string"},'"1.10.3"'),s(`
  ✔  nginx-modules: NGINX modules
     ✔  Nginx Environment modules is expected to include `),n("span",{class:"token string"},'"http_ssl"'),s(`
     ✔  Nginx Environment modules is expected to include `),n("span",{class:"token string"},'"stream_ssl"'),s(`
     ✔  Nginx Environment modules is expected to include `),n("span",{class:"token string"},'"mail_ssl"'),s(`
  ✔  nginx-conf-file: NGINX configuration `),n("span",{class:"token function"},"file"),s(`
     ✔  File /etc/nginx/nginx.conf is expected to be `),n("span",{class:"token function"},"file"),s(`
  ×  nginx-conf-perms: NGINX configuration `),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),s(" failed"),n("span",{class:"token punctuation"},")"),s(`
     ✔  File /etc/nginx/nginx.conf is expected to be owned by `),n("span",{class:"token string"},'"root"'),s(`
     ✔  File /etc/nginx/nginx.conf is expected to be grouped into `),n("span",{class:"token string"},'"root"'),s(`
     ×  File /etc/nginx/nginx.conf is expected not to be readable by others
     expected File /etc/nginx/nginx.conf not to be readable by others
     ✔  File /etc/nginx/nginx.conf is expected not to be writable by others
     ✔  File /etc/nginx/nginx.conf is expected not to be executable by others
  ×  nginx-shell-access: NGINX shell access
     ×  `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"root"'),n("span",{class:"token punctuation"},"]"),s(" is expected to be "),n("span",{class:"token keyword"},"in"),s(),n("span",{class:"token string"},'"admin"'),s(`
     expected `),n("span",{class:"token variable"},[n("span",{class:"token variable"},"`"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"root"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token variable"},"`")]),s(" to be "),n("span",{class:"token keyword"},"in"),s(" the list: "),n("span",{class:"token variable"},[n("span",{class:"token variable"},"`"),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"admin"'),n("span",{class:"token punctuation"},"]"),n("span",{class:"token variable"},"`")]),s(` 
     Diff:
      `),n("span",{class:"token punctuation"},"["),n("span",{class:"token string"},'"root"'),n("span",{class:"token punctuation"},"]"),s(`


Profile Summary: `),n("span",{class:"token number"},"3"),s(" successful controls, "),n("span",{class:"token number"},"2"),s(" control failures, "),n("span",{class:"token number"},"0"),s(` controls skipped
Test Summary: `),n("span",{class:"token number"},"9"),s(" successful, "),n("span",{class:"token number"},"2"),s(" failures, "),n("span",{class:"token number"},"0"),s(` skipped
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),J=n("p",null,"Remember, the first step, detect, is where you identify where the problems are so that you can accurately assess risk and prioritize remediation actions.",-1),Q=n("p",null,"For the second step, correct, you can use a configuration management tool or some other automation framework to correct compliance failures for you.",-1),Z={href:"https://learn.chef.io/tracks/integrated-compliance#/",target:"_blank",rel:"noopener noreferrer"},$={class:"hint-container details"},nn=n("summary",null,"The Target ID in the InSpec exec output",-1),sn={href:"https://github.com/inspec/inspec/pull/5895",target:"_blank",rel:"noopener noreferrer"};function en(an,tn){const l=r("ExternalLinkIcon"),o=r("CodeTabs");return d(),p("div",null,[b,n("div",v,[k,n("p",null,[n("a",g,[h,t(l)])])]),x,n("p",null,[f,s(" is one of InSpec's "),n("a",_,[s("built-in matchers"),t(l)]),s(". "),N,s(" understands version numbers and can use the operators ==, <, <=, >=, and >. "),y,s(' compares versions by each segment, not as a string. For example, "7.4" is less than than "7.30".')]),I,t(o,{id:"40",data:[{id:"Command - req 1"},{id:"Generic Command - req 1"},{id:"Output - req 1"}],"tab-id":"shell"},{title0:e(({value:a,isActive:i})=>[s("Command - req 1")]),title1:e(({value:a,isActive:i})=>[s("Generic Command - req 1")]),title2:e(({value:a,isActive:i})=>[s("Output - req 1")]),tab0:e(({value:a,isActive:i})=>[T]),tab1:e(({value:a,isActive:i})=>[w]),tab2:e(({value:a,isActive:i})=>[A]),_:1}),E,t(o,{id:"87",data:[{id:"Command - req 2"},{id:"Generic Command - req 2"},{id:"Output - req 2"}],"tab-id":"shell"},{title0:e(({value:a,isActive:i})=>[s("Command - req 2")]),title1:e(({value:a,isActive:i})=>[s("Generic Command - req 2")]),title2:e(({value:a,isActive:i})=>[s("Output - req 2")]),tab0:e(({value:a,isActive:i})=>[q]),tab1:e(({value:a,isActive:i})=>[C]),tab2:e(({value:a,isActive:i})=>[G]),_:1}),R,t(o,{id:"114",data:[{id:"Command - req 3"},{id:"Generic Command - req 3"},{id:"Output - req 3"}],"tab-id":"shell"},{title0:e(({value:a,isActive:i})=>[s("Command - req 3")]),title1:e(({value:a,isActive:i})=>[s("Generic Command - req 3")]),title2:e(({value:a,isActive:i})=>[s("Output - req 3")]),tab0:e(({value:a,isActive:i})=>[O]),tab1:e(({value:a,isActive:i})=>[X]),tab2:e(({value:a,isActive:i})=>[D]),_:1}),S,n("div",F,[P,n("p",null,[n("a",K,[V,t(l)])])]),M,B,t(o,{id:"158",data:[{id:"Command - req 4"},{id:"Generic Command - req 4"},{id:"Output - req 4"}],"tab-id":"shell"},{title0:e(({value:a,isActive:i})=>[s("Command - req 4")]),title1:e(({value:a,isActive:i})=>[s("Generic Command - req 4")]),title2:e(({value:a,isActive:i})=>[s("Output - req 4")]),tab0:e(({value:a,isActive:i})=>[L]),tab1:e(({value:a,isActive:i})=>[W]),tab2:e(({value:a,isActive:i})=>[Y]),_:1}),U,t(o,{id:"185",data:[{id:"Command - req 5"},{id:"Generic Command - req 5"},{id:"Output - req 5"}],"tab-id":"shell"},{title0:e(({value:a,isActive:i})=>[s("Command - req 5")]),title1:e(({value:a,isActive:i})=>[s("Generic Command - req 5")]),title2:e(({value:a,isActive:i})=>[s("Output - req 5")]),tab0:e(({value:a,isActive:i})=>[z]),tab1:e(({value:a,isActive:i})=>[H]),tab2:e(({value:a,isActive:i})=>[j]),_:1}),J,Q,n("p",null,[s("You won't correct this issue in this module, but later you can check out the "),n("a",Z,[s("Integrated Compliance with Chef"),t(l)]),s(" track to learn more about how to correct compliance issues using Chef.")]),n("details",$,[nn,n("p",null,[s("The target_id in the reporter is the UUID generated by train to uniquely identify the target system/node. Reference the "),n("a",sn,[s("PR that made this update"),t(l)])])])])}const cn=u(m,[["render",en],["__file","05.html.vue"]]);export{cn as default};
