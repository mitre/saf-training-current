import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as n,f as a}from"./app-WeARUK1X.js";const i={},r=a("<p>When updating Benchmark Profiles, adhere to these key principles to maintain alignment with the original Guidance Documents:</p><ol><li><p><strong>Maintain Version Integrity:</strong> <strong>Never Merge</strong> new requirements into older benchmark branches. This will create a &#39;mixed baseline&#39; that doesn&#39;t align with any specific guidance document. Benchmarks, STIGs, and Guidance Documents form a &#39;proper subset&#39; - they should be treated as &#39;all or nothing&#39;. Mixing requirements from different versions can invalidate the concept of &#39;testing to a known benchmark&#39;.</p></li><li><p><strong>Benchmarks are a Complete Set of Requirements:</strong> A Security Benchmark is &#39;complete and valid&#39; only when all requirements for a specific Release or Major Version are met. Unlike traditional software projects, features and capabilities cannot be incrementally added. A Security Benchmark and its corresponding InSpec Profile are valid only within the scope of a specific &#39;Release&#39; of that Benchmark.</p></li><li><p><strong>Release Readiness Is Predefined:</strong> A Benchmark is considered &#39;ready for release&#39; when it meets the expected thresholds, hardening, and validation results. Don&#39;t be overwhelmed by the multitude of changes across the files. Instead, focus on the specific requirement you are working on. Understand its expected failure and success states on each of the target testing platforms. This approach prevents you from being overwhelmed and provides solid pivot points as you work through the implementation of the automated tests for each requirement and its &#39;contexts&#39;.</p></li><li><p><strong>Use Vendor-Managed Standard Releases:</strong> When setting up a test suite, prioritize using vendor-managed standard releases for software installations and baseline configurations. This should be the starting point for both &#39;vanilla&#39; and &#39;hardening&#39; workflows. This approach ensures that your initial and ongoing testing, hardening, and validation closely mirror the real-world usage scenarios of your end-users.</p></li></ol><p>By adhering to these principles, you ensure that your updates to Benchmark Profiles are consistent, accurate, and aligned with the original guidance documents.</p>",3),s=[r];function o(l,c){return t(),n("div",null,s)}const p=e(i,[["render",o],["__file","10.html.vue"]]);export{p as default};
