import{_ as u}from"./plugin-vue_export-helper-x3n3nnut.js";import{r,o as d,c as p,d as e,e as n,b as l,w as s,f as c}from"./app-WeARUK1X.js";const m={},b=e("h2",{id:"inspec-commands-and-documentation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#inspec-commands-and-documentation","aria-hidden":"true"},"#"),n(" InSpec Commands and Documentation")],-1),h=e("p",null,"Before we test our NGINX configuration, let's take a look at the InSpec commands and documentation we can use to write tests.",-1),v=e("h3",{id:"how-to-run-inspec",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-run-inspec","aria-hidden":"true"},"#"),n(" How to Run InSpec")],-1),k=e("code",null,"inspec exec",-1),g={href:"https://mitre.github.io/saf-training/courses/user/06.html",target:"_blank",rel:"noopener noreferrer"},_=c(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>inspec <span class="token builtin class-name">exec</span> WHERE_IS_THE_PROFILE <span class="token parameter variable">-t</span> WHAT_IS_THE_TARGET --more-flags EXTRA_STUFF <span class="token parameter variable">--reporter</span> WHAT_SHOULD_INSPEC_DO_WITH_THE_RESULTS
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,1),f={class:"hint-container details"},y=e("summary",null,"Want to try it out?",-1),x=e("p",null,[n("You can run a sample InSpec command against the nginx target running in the development lab environment using your "),e("code",null,"my_nginx"),n(" profile. Remember, this profile only has one sample control right now.")],-1),w=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("inspec "),e("span",{class:"token builtin class-name"},"exec"),n(" my_nginx "),e("span",{class:"token parameter variable"},"-t"),n(" docker://nginx "),e("span",{class:"token parameter variable"},"--reporter"),n(` cli
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),I=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("Profile:   InSpec Profile "),e("span",{class:"token punctuation"},"("),n("my_nginx"),e("span",{class:"token punctuation"},")"),n(`
Version:   `),e("span",{class:"token number"},"0.1"),n(`.0
Target:    docker://31e4ea1be052a9bcc137003e77cbc7f0a4a3149576a2ce65354092424b0d3a89
Target ID: 761efa53-ee0a-5ea0-a459-b2a5d287b531

  ✔  tmp-1.0: Create /tmp directory
     ✔  File /tmp is expected to be directory

  File /tmp
     ✔  is expected to be directory

Profile Summary: `),e("span",{class:"token number"},"1"),n(" successful control, "),e("span",{class:"token number"},"0"),n(" control failures, "),e("span",{class:"token number"},"0"),n(` controls skipped
Test Summary: `),e("span",{class:"token number"},"2"),n(" successful, "),e("span",{class:"token number"},"0"),n(" failures, "),e("span",{class:"token number"},"0"),n(` skipped
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),S=e("h3",{id:"how-to-write-inspec",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#how-to-write-inspec","aria-hidden":"true"},"#"),n(" How to Write InSpec")],-1),A=e("p",null,[n("The "),e("code",null,"inspec exec"),n(" command is used to run or "),e("em",null,"execute"),n(" InSpec profiles. Now, let's talk about InSpec's existing documentation and features to support "),e("em",null,"writing"),n(" those InSpec profiles.")],-1),T=e("code",null,"file",-1),N=e("code",null,"be_directory",-1),C={href:"https://docs.chef.io/inspec/matchers/",target:"_blank",rel:"noopener noreferrer"},R=e("code",null,"be_in",-1),O=e("code",null,"be_readable",-1),E=e("code",null,"cmp",-1),G=e("code",null,"include",-1),W=e("div",{class:"hint-container tip"},[e("p",{class:"hint-container-title"},"Make Writing InSpec Easier with Built-in Resources"),e("p",null,"InSpec features dozens of resources and matchers that come predefined in the language. These resources are a core benefit to using InSpec because they allow you to leverage existing stable code to write simple and consistent tests."),e("p",null,"When writing profiles, refer back to the documentation for resources. They often give you an example of how to write a test that matches your current problem.")],-1),X={class:"hint-container info"},F=e("p",{class:"hint-container-title"},"Finding Documentation",-1),Y={href:"https://www.inspec.io/docs/",target:"_blank",rel:"noopener noreferrer"},D={href:"https://github.com/inspec/inspec",target:"_blank",rel:"noopener noreferrer"},H=e("code",null,"file",-1),U={href:"https://supermarket.chef.io/tools-directory",target:"_blank",rel:"noopener noreferrer"},L={href:"https://www.inspec.io/docs/reference/shell/",target:"_blank",rel:"noopener noreferrer"},P=e("h3",{id:"the-inspec-shell",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#the-inspec-shell","aria-hidden":"true"},"#"),n(" The InSpec shell")],-1),M={href:"https://www.inspec.io/docs/reference/shell/",target:"_blank",rel:"noopener noreferrer"},q=e("p",null,[n("You are not required to use the InSpec shell to develop your profiles, but some users (including this course's instructors) find the InSpec shell to be a useful way to get immediate feedback and explore what's available. You can also use the InSpec shell to debug your tests; the shell lets you write and execute "),e("code",null,"describe"),n(" blocks in-line.")],-1),z={class:"hint-container details"},V=e("summary",null,"What is the InSpec Shell?",-1),B=e("code",null,"pry",-1),j={href:"https://github.com/pry/pry",target:"_blank",rel:"noopener noreferrer"},Q=e("code",null,"pry",-1),J=e("h3",{id:"entering-the-inspec-shell",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#entering-the-inspec-shell","aria-hidden":"true"},"#"),n(" Entering the InSpec shell")],-1),K=e("p",null,[n("Run "),e("code",null,"inspec shell"),n(" to enter the interactive session.")],-1),Z=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`inspec shell
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),$=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n(`Welcome to the interactive InSpec Shell
To `),e("span",{class:"token function"},"find"),n(" out how to use it, type: "),e("span",{class:"token builtin class-name"},"help"),n(`

You are currently running on:

    Name:      ubuntu
    Families:  debian, linux, unix, os
    Release:   `),e("span",{class:"token number"},"20.04"),n(`
    Arch:      x86_64
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),ee=e("p",null,[n("Run "),e("code",null,"help"),n(" to see what commands are available.")],-1),ne=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"help"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),se=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("inspec"),e("span",{class:"token operator"},">"),n(),e("span",{class:"token builtin class-name"},"help"),n(`
You are currently running on:

    Name:      ubuntu
    Families:  debian, linux, unix, os
    Release:   `),e("span",{class:"token number"},"20.04"),n(`
    Arch:      x86_64

Available commands:

    `),e("span",{class:"token variable"},[e("span",{class:"token variable"},"`"),e("span",{class:"token punctuation"},"["),n("resource"),e("span",{class:"token punctuation"},"]"),e("span",{class:"token variable"},"`")]),n(` - run resource on target machine
    `),e("span",{class:"token variable"},[e("span",{class:"token variable"},"`"),e("span",{class:"token builtin class-name"},"help"),n(" resources"),e("span",{class:"token variable"},"`")]),n(` - show all available resources that can be used as commands
    `),e("span",{class:"token variable"},[e("span",{class:"token variable"},"`"),e("span",{class:"token builtin class-name"},"help"),n(),e("span",{class:"token punctuation"},"["),n("resource"),e("span",{class:"token punctuation"},"]"),e("span",{class:"token variable"},"`")]),n(` - information about a specific resource
    `),e("span",{class:"token variable"},[e("span",{class:"token variable"},"`"),e("span",{class:"token builtin class-name"},"help"),n(" matchers"),e("span",{class:"token variable"},"`")]),n(` - show information about common matchers
    `),e("span",{class:"token variable"},[e("span",{class:"token variable"},"`"),e("span",{class:"token builtin class-name"},"exit"),e("span",{class:"token variable"},"`")]),n(" - "),e("span",{class:"token builtin class-name"},"exit"),n(` the InSpec shell

You can use resources `),e("span",{class:"token keyword"},"in"),n(" this environment to "),e("span",{class:"token builtin class-name"},"test"),n(` the target machine. For example:

    command`),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},"'uname -a'"),e("span",{class:"token punctuation"},")"),n(`.stdout
    file`),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},"'/proc/cpuinfo'"),e("span",{class:"token punctuation"},")"),n(".content "),e("span",{class:"token operator"},"="),e("span",{class:"token operator"},">"),n(),e("span",{class:"token string"},'"value"'),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),ae=e("p",null,[n("Run "),e("code",null,"help resources"),n(" to see which resources are available.")],-1),te=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"help"),n(` resources
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),le=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("inspec"),e("span",{class:"token operator"},">"),n(),e("span",{class:"token builtin class-name"},"help"),n(` resources

         - aide_conf
         - apache
         - apache_conf
         - `),e("span",{class:"token function"},"apt"),n(`
         - audit_policy
         - auditd
         - auditd_conf
         `),e("span",{class:"token punctuation"},".."),n(`.
         - `),e("span",{class:"token function"},"file"),n(`
         `),e("span",{class:"token punctuation"},".."),n(`.
        - xml
        - yaml
        - yum
        - zfs_dataset
        - zfs_pool
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),ie=c(`<p>You see <code>file</code> and other resources listed.</p><h3 id="using-the-inspec-shell" tabindex="-1"><a class="header-anchor" href="#using-the-inspec-shell" aria-hidden="true">#</a> Using the InSpec Shell</h3><p>Earlier, we saw this <code>describe</code> block:</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>describe file<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;/tmp&#39;</span></span><span class="token punctuation">)</span> <span class="token keyword">do</span>
  it <span class="token punctuation">{</span> should be_directory <span class="token punctuation">}</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The InSpec shell understands the structure of blocks. This enables you to run mutiline code. As an example, run the entire <code>describe</code> block like this which will run the entire block of code in the InSpec Shell and return the result.</p>`,5),oe=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("describe file"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'/tmp'")]),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token keyword"},"do"),n(`
  it `),e("span",{class:"token punctuation"},"{"),n(" should be_directory "),e("span",{class:"token punctuation"},"}"),n(`
`),e("span",{class:"token keyword"},"end"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),ce=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("inspec"),e("span",{class:"token operator"},">"),n(" describe file"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'/tmp'")]),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token keyword"},"do"),n(`
inspec`),e("span",{class:"token operator"},">"),n("   it "),e("span",{class:"token punctuation"},"{"),n(" should be_directory "),e("span",{class:"token punctuation"},"}"),n(`  
inspec`),e("span",{class:"token operator"},">"),n(),e("span",{class:"token keyword"},"end"),n(`  

`),e("span",{class:"token symbol"},"Profile"),e("span",{class:"token operator"},":"),n("   inspec"),e("span",{class:"token operator"},"-"),n(`shell
`),e("span",{class:"token symbol"},"Version"),e("span",{class:"token operator"},":"),n("   "),e("span",{class:"token punctuation"},"("),e("span",{class:"token keyword"},"not"),n(" specified"),e("span",{class:"token punctuation"},")"),n(`
Target `),e("span",{class:"token constant"},"ID"),e("span",{class:"token operator"},":"),n(` 

  `),e("span",{class:"token builtin"},"File"),n(),e("span",{class:"token operator"},"/"),n(`tmp
     ✔  is expected to be directory

Test Summary`),e("span",{class:"token operator"},":"),n(),e("span",{class:"token number"},"1"),n(" successful"),e("span",{class:"token punctuation"},","),n(),e("span",{class:"token number"},"0"),n(" failures"),e("span",{class:"token punctuation"},","),n(),e("span",{class:"token number"},"0"),n(` skipped
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),re=c('<p>In practice, you don&#39;t typically run controls interactively this way for day to day use, but it is a great way to test out your ideas, find bugs or validate your approach before running a scan in its entirety on a target of evaluation.</p><div class="hint-container tip"><p class="hint-container-title">What is the difference between InSpec and Ruby?</p><p>Inspec is a Domain Specific Language (DSL) on top of Ruby. In other words, InSpec is built on the Ruby programming language. For example, InSpec matchers are implemented as Ruby methods.</p></div><h3 id="exploring-resources" tabindex="-1"><a class="header-anchor" href="#exploring-resources" aria-hidden="true">#</a> Exploring Resources</h3><h4 id="file-example" tabindex="-1"><a class="header-anchor" href="#file-example" aria-hidden="true">#</a> <code>file</code> example</h4>',4),ue={href:"https://docs.chef.io/inspec/resources/",target:"_blank",rel:"noopener noreferrer"},de=e("code",null,"file",-1),pe=e("br",null,null,-1),me=e("code",null,"file",-1),be=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("file"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'/tmp'")]),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),e("span",{class:"token keyword"},"class"),e("span",{class:"token punctuation"},"."),n("superclass"),e("span",{class:"token punctuation"},"."),n("instance_methods"),e("span",{class:"token punctuation"},"("),e("span",{class:"token boolean"},"false"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),n(`sort
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),he=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("inspec"),e("span",{class:"token operator"},">"),n(" file"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'/tmp'")]),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),e("span",{class:"token keyword"},"class"),e("span",{class:"token punctuation"},"."),n("superclass"),e("span",{class:"token punctuation"},"."),n("instance_methods"),e("span",{class:"token punctuation"},"("),e("span",{class:"token boolean"},"false"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),n(`sort

        `),e("span",{class:"token operator"},"=>"),n(),e("span",{class:"token punctuation"},"["),e("span",{class:"token symbol"},":allowed?"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":basename"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":block_device?"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":character_device?"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":contain"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":content"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":directory?"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token operator"},"..."),n(`
         `),e("span",{class:"token symbol"},":sticky"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":sticky?"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":suid"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":symlink?"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":to_s"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":type"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":uid"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":version?"),e("span",{class:"token punctuation"},","),n(`
         `),e("span",{class:"token symbol"},":writable?"),e("span",{class:"token punctuation"},"]"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),ve=e("p",null,[n("You can use the arrow or Page Up and Page Down keys to scroll through the list. When you're done, press "),e("code",null,"Q"),n(".")],-1),ke={class:"hint-container details"},ge=c(`<summary>Exploring Resources in the InSpec Shell</summary><p>Let&#39;s use the InSpec shell to explore some resources in InSpec. We will start with one of the most common elements on the system: a directory. In the InSpec Shell call the <code>file.directory?</code> method.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>file<span class="token punctuation">(</span><span class="token string">&#39;/tmp&#39;</span><span class="token punctuation">)</span>.directory?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>inspec<span class="token operator">&gt;</span> file<span class="token punctuation">(</span><span class="token string">&#39;/tmp&#39;</span><span class="token punctuation">)</span>.directory?
        <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>This will return <code>true</code>, since <code>/tmp</code> is a directory on the system and exists on your workstation container.</p><p>To make the tests easier to read, the InSpec language uses &quot;syntactic sugar&quot; to turn methods into English-like phrases. For example, the Ruby language contains boolean methods ending in <code>?</code> which evaluate to <code>true</code> or <code>false</code> (<code>nil</code> is a type of false). InSpec changes the syntax of these methods to include <code>be_</code> before the method rather than <code>?</code> after the method to make it more readable. For example, to check if a directory exists, Ruby would traditionally use <code>directory?</code> while InSpec uses <code>be_directory</code>.</p>`,6),_e={class:"hint-container info"},fe=e("p",{class:"hint-container-title"},"Using Ruby Predicate Methods",-1),ye=e("strong",null,"best practice",-1),xe=e("code",null,"true",-1),we=e("code",null,"false",-1),Ie=e("br",null,null,-1),Se=e("code",null,"?",-1),Ae=e("code",null,"be_",-1),Te={href:"http://ruby-for-beginners.rubymonstas.org/objects/predicates.html",target:"_blank",rel:"noopener noreferrer"},Ne=c('<h4 id="nginx-example" tabindex="-1"><a class="header-anchor" href="#nginx-example" aria-hidden="true">#</a> <code>nginx</code> example</h4><p>Now&#39;s a good time to define the requirements for our NGINX configuration. Let&#39;s say that you require:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">1</span>. NGINX version <span class="token number">1.10</span>.3 or later.\n<span class="token number">2</span>. The following NGINX modules should be installed:\n   * <span class="token variable"><span class="token variable">`</span>http_ssl<span class="token variable">`</span></span>\n   * <span class="token variable"><span class="token variable">`</span>stream_ssl<span class="token variable">`</span></span>\n   * <span class="token variable"><span class="token variable">`</span>mail_ssl<span class="token variable">`</span></span>\n<span class="token number">3</span>. The NGINX configuration <span class="token function">file</span> - <span class="token variable"><span class="token variable">`</span>/etc/nginx/nginx.conf<span class="token variable">`</span></span>- should exist as a file.\n<span class="token number">4</span>. The NGINX configuration <span class="token function">file</span> should:\n   * be owned by the <span class="token variable"><span class="token variable">`</span>root<span class="token variable">`</span></span> user and group.\n   * not be readable, writeable, or executable by others.\n<span class="token number">5</span>. The NGINX shell access should be restricted to admin users.\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the next section, we will start writing controls for <code>my_nginx</code> profile.</p><p>Let&#39;s see what resources are available for <code>nginx</code>.</p><p>Run <code>help resources</code> a second time to identify InSpec&#39;s provided two built-in resources to support NGINX – <code>nginx</code> and <code>nginx_conf</code>.</p>',6),Ce=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token builtin class-name"},"help"),n(` resources
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),Re=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("inspec"),e("span",{class:"token operator"},">"),n(),e("span",{class:"token builtin class-name"},"help"),n(` resources

         - aide_conf
         - apache
         - apache_conf
         - `),e("span",{class:"token function"},"apt"),n(`
         `),e("span",{class:"token punctuation"},".."),n(`.
         - nginx
         - nginx_conf
         `),e("span",{class:"token punctuation"},".."),n(`.
         - xml
         - yaml
         - yum
         - yumrepo
         - zfs_dataset
         - zfs_pool
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),Oe=e("p",null,[n("Run "),e("code",null,"nginx.methods"),n(". This will list all of the available methods for the "),e("code",null,"nginx"),n(" resource. You can see the "),e("code",null,"version"),n(" and "),e("code",null,"modules"),n(" methods. These will be useful to us in the next section.")],-1),Ee=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("nginx"),e("span",{class:"token punctuation"},"."),n(`methods
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),Ge=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[e("span",{class:"token operator"},"=>"),n(),e("span",{class:"token punctuation"},"["),e("span",{class:"token symbol"},":params"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":bin_dir"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":prefix"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":openssl_version"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":compiler_info"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":support_info"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token operator"},"..."),n(`
 `),e("span",{class:"token symbol"},":http_scgi_temp_path"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":version"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":resource_id"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":to_s"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":service"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token operator"},"..."),n(`
  `),e("span",{class:"token symbol"},":equal?"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":__id__"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":instance_eval"),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token symbol"},":instance_exec"),e("span",{class:"token punctuation"},"]"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),We=e("p",null,[n("Run "),e("code",null,"nginx.version"),n(" to see what result you get.")],-1),Xe=e("div",{class:"hint-container warning"},[e("p",{class:"hint-container-title"},"Expected Error Ahead"),e("p",null,"Recall that you're working on your workstation environment, which does not have NGINX installed.")],-1),Fe=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("nginx"),e("span",{class:"token punctuation"},"."),n(`version
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),Ye=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("inspec"),e("span",{class:"token operator"},">"),n(" nginx"),e("span",{class:"token punctuation"},"."),n(`version
`),e("span",{class:"token symbol"},"NoMethodError"),e("span",{class:"token operator"},":"),n(" undefined method `"),e("span",{class:"token punctuation"},"["),e("span",{class:"token punctuation"},"]"),n("' "),e("span",{class:"token keyword"},"for"),n(),e("span",{class:"token keyword"},"nil"),e("span",{class:"token symbol"},":NilClass"),n(`
from `),e("span",{class:"token operator"},"/"),n("opt"),e("span",{class:"token operator"},"/"),n("inspec"),e("span",{class:"token operator"},"/"),n("embedded"),e("span",{class:"token operator"},"/"),n("lib"),e("span",{class:"token operator"},"/"),n("ruby"),e("span",{class:"token operator"},"/"),n("gems"),e("span",{class:"token operator"},"/"),e("span",{class:"token number"},"2.4"),e("span",{class:"token number"},".0"),e("span",{class:"token operator"},"/"),n("gems"),e("span",{class:"token operator"},"/"),n("inspec"),e("span",{class:"token operator"},"-"),e("span",{class:"token number"},"2.0"),e("span",{class:"token number"},".17"),e("span",{class:"token operator"},"/"),n("lib"),e("span",{class:"token regex-literal"},[e("span",{class:"token regex"},"/resources/nginx")]),e("span",{class:"token punctuation"},"."),n("rb"),e("span",{class:"token operator"},":"),e("span",{class:"token number"},"39"),e("span",{class:"token symbol"},":in"),n(" `block "),e("span",{class:"token punctuation"},"("),e("span",{class:"token number"},"2"),n(" levels"),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token keyword"},"in"),n(),e("span",{class:"token operator"},"<"),e("span",{class:"token keyword"},"class"),e("span",{class:"token symbol"},":Nginx"),e("span",{class:"token operator"},">"),n(`'
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),De=e("p",null,"We can verify this with Inspec by running the following command:",-1),He=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("package"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'nginx'")]),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),n("installed"),e("span",{class:"token operator"},"?"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),Ue=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("inspec"),e("span",{class:"token operator"},">"),n(" package"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'nginx'")]),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),n("installed"),e("span",{class:"token operator"},"?"),n(`

        `),e("span",{class:"token operator"},"=>"),n(),e("span",{class:"token boolean"},"false"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),Le=c(`<p>As you can see we get <code>false</code> - since nginx is not installed on your <code>runner</code>.</p><p>We can instead run InSpec shell commands against the <strong>target that does have NGINX installed</strong> to see what results we find.</p><p>To do so, first start by exiting your InSpec shell session.</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>exit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Run <code>docker ps</code> to see the running docker containers in your development lab environment that we can test:</p>`,5),Pe=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"docker"),n(),e("span",{class:"token function"},"ps"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),Me=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n(`CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                NAMES
d4bcef5bb9e3   nginx:latest   `),e("span",{class:"token string"},'"/docker-entrypoint.…"'),n("   "),e("span",{class:"token number"},"23"),n(" seconds ago   Up "),e("span",{class:"token number"},"22"),n(" seconds   "),e("span",{class:"token number"},"80"),n(`/tcp               nifty_shtern
4f0ceb9b5974   nginx:latest   `),e("span",{class:"token string"},'"/docker-entrypoint.…"'),n("   "),e("span",{class:"token number"},"2"),n(" months ago     Up "),e("span",{class:"token number"},"45"),n(" seconds   "),e("span",{class:"token number"},"0.0"),n(".0.0:80-"),e("span",{class:"token operator"},">"),e("span",{class:"token number"},"80"),n(`/tcp   nginx
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),qe=e("p",null,[n("We can enter the InSpec shell on the nginx container instead of our lab environment host machine that we did before."),e("br"),n(" Run "),e("code",null,"inspec shell"),n(", this time providing the "),e("code",null,"-t"),n(" argument to connect the shell session to the target container.")],-1),ze=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("inspec shell "),e("span",{class:"token parameter variable"},"-t"),n(` docker://nginx
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),Ve=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("inspec shell "),e("span",{class:"token parameter variable"},"-t"),n(` docker://CONTAINER_ID
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),Be=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n(`Welcome to the interactive InSpec Shell
To `),e("span",{class:"token function"},"find"),n(" out how to use it, type: "),e("span",{class:"token builtin class-name"},"help"),n(`

You are currently running on:

    Name:      debian
    Families:  debian, linux, unix, os
    Release:   `),e("span",{class:"token number"},"12.2"),n(`
    Arch:      x86_64
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),je=e("div",{class:"hint-container tip"},[e("p",{class:"hint-container-title"},"InSpec is agentless"),e("p",null,"Remember that the target does not have InSpec installed on it. Your shell session exists on the workstation; InSpec routes commands to the target instance over Docker.")],-1),Qe=e("p",null,"Check that the nginx package is intalled, this time on the target container.",-1),Je=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("package"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'nginx'")]),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),n("installed"),e("span",{class:"token operator"},"?"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),Ke=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("inspec"),e("span",{class:"token operator"},">"),n(" package"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string-literal"},[e("span",{class:"token string"},"'nginx'")]),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),n("installed"),e("span",{class:"token operator"},"?"),n(`

        `),e("span",{class:"token operator"},"=>"),n(),e("span",{class:"token boolean"},"true"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),Ze=e("p",null,[n("Now, let's get the "),e("code",null,"version"),n(" of NGINX that is installed on the target, run: "),e("code",null,"nginx.version"),n(". You can see that version 1.23.3 was installed on our container.")],-1),$e=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("nginx"),e("span",{class:"token punctuation"},"."),n(`version
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),en=e("div",{class:"language-text line-numbers-mode","data-ext":"text"},[e("pre",{class:"language-text"},[e("code",null,`inspec> nginx.version
=> "1.25.3"
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),nn=e("p",null,[n("To complete the example, let's see which "),e("code",null,"modules"),n(" are enabled on the nginx container. Run "),e("code",null,"nginx.modules"),n(" to list the installed NGINX modules.")],-1),sn=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[n("nginx"),e("span",{class:"token punctuation"},"."),n(`modules
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),an=e("div",{class:"language-ruby line-numbers-mode","data-ext":"rb"},[e("pre",{class:"language-ruby"},[e("code",null,[e("span",{class:"token operator"},"=>"),n(),e("span",{class:"token punctuation"},"["),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_addition"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_auth_request"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_dav"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_flv"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_gunzip"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_gzip_static"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_mp4"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_random_index"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_realip"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_secure_link"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_slice"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_ssl"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_stub_status"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_sub"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"http_v2"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"mail_ssl"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"stream_realip"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"stream_ssl"')]),e("span",{class:"token punctuation"},","),n(`
 `),e("span",{class:"token string-literal"},[e("span",{class:"token string"},'"stream_ssl_preread"')]),e("span",{class:"token punctuation"},"]"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),tn={class:"hint-container details"},ln=e("summary",null,"Looking at the nginx_conf resource",-1),on={href:"https://www.inspec.io/docs/reference/resources/nginx_conf/",target:"_blank",rel:"noopener noreferrer"},cn=e("code",null,"/etc/nginx/nginx.conf",-1),rn=c("<p>To check whether the NGINX configuration file exists as a file, we want to test attributes of the file itself, so we use the <code>file</code> resource.</p><p>Use the <code>file</code> resource to check whether the NGINX configuration file is owned by <code>root</code> and is not readable, writeable, or executable by others. You saw earlier how the <code>file</code> resource provides the <code>readable</code>, <code>writeable</code>, and <code>executable</code> methods. You would also see that the <code>file</code> resource provides the <code>owned_by</code> and <code>grouped_into</code> methods.</p>",2),un=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("file"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},"'/tmp'"),e("span",{class:"token punctuation"},")"),n(".class.superclass.instance_methods"),e("span",{class:"token punctuation"},"("),n("false"),e("span",{class:"token punctuation"},")"),n(`.sort
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),dn=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("        "),e("span",{class:"token operator"},"="),e("span",{class:"token operator"},">"),n(),e("span",{class:"token punctuation"},"["),n(`:allowed?,
         :directory?,
         :executable?,
         :exist?,
         :file,
         :file?,
         :file_version,
         :gid,
         :group,
         :grouped_into?,
         `),e("span",{class:"token punctuation"},".."),n(`.
         :owned_by?,
         `),e("span",{class:"token punctuation"},".."),n(`.
         :readable?,
         `),e("span",{class:"token punctuation"},".."),n(`.
         :to_s,
         :type,
         :uid,
         :version?,
         :writable?`),e("span",{class:"token punctuation"},"]"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),pn=e("p",null,[n("To check whether shell access has been provided to non-admin users, because we want to test attributes of users, you'll use the "),e("code",null,"users"),n(" resource.")],-1),mn=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("users.class.superclass.instance_methods"),e("span",{class:"token punctuation"},"("),n("false"),e("span",{class:"token punctuation"},")"),n(`.sort
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),bn=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("        "),e("span",{class:"token operator"},"="),e("span",{class:"token operator"},">"),n(),e("span",{class:"token punctuation"},"["),n(`:count, 
        :disabled, 
        :disabled?, 
        :enabled?, 
        :entries, 
        :exist?, 
        :exists?, 
        :gids, 
        :groupnames, 
        :groups, 
        :homes, 
        :maxdays, 
        :mindays, 
        :raw_data, 
        :shells, 
        :to_s, 
        :uids, 
        :usernames, 
        :warndays, 
        :where`),e("span",{class:"token punctuation"},"]"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),hn=c(`<p>Exit the InSpec shell session with the <code>exit</code> command.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2);function vn(kn,gn){const o=r("ExternalLinkIcon"),i=r("CodeTabs");return d(),p("div",null,[b,h,v,e("p",null,[n("Use the InSpec executable with the command "),k,n(" to run a profile against a system. The generic command is below, but take a look at our breakdown on "),e("a",g,[n("How To Run InSpec"),l(o)]),n(" for the MITRE SAF User course for more information.")]),_,e("details",f,[y,x,l(i,{id:"17",data:[{id:"Run InSpec"},{id:"Expected Output"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Run InSpec")]),title1:s(({value:a,isActive:t})=>[n("Expected Output")]),tab0:s(({value:a,isActive:t})=>[w]),tab1:s(({value:a,isActive:t})=>[I]),_:1})]),S,A,e("p",null,[n("Good InSpec tests will use resources, many of which are already built in, to easily describe some part of the system. Remember the "),T,n(" resource as an example from the previous section. Additionally, tests should use matchers to implement the logic check of an expected result. The previous example used "),N,n(" as a matcher. There are a number of built-in "),e("a",C,[n("matchers"),l(o)]),n(": "),R,n(", "),O,n(", "),E,n(", "),G,n(", to list a few.")]),W,e("div",X,[F,e("ul",null,[e("li",null,[n("Explore the "),e("a",Y,[n("InSpec documentation"),l(o)]),n(" to see which resources and matchers are available, including descriptions of their attributes and examples of their use.")]),e("li",null,[n("Examine the "),e("a",D,[n("source code"),l(o)]),n(" to see what's available. For example, you can see how "),H,n(" and other InSpec resources are implemented.")]),e("li",null,[n("Reference examples, such as profiles provided on "),e("a",U,[n("Chef Supermarket"),l(o)]),n(", as a guide.")]),e("li",null,[n("Explore InSpec interactively using the "),e("a",L,[n("InSpec shell"),l(o)]),n(".")])])]),P,e("p",null,[n("The "),e("a",M,[n("InSpec shell"),l(o)]),n(" enables you to explore InSpec interactively. In this part, you'll use the InSpec shell to discover which resources can be used to test your NGINX configuration.")]),q,e("details",z,[V,e("p",null,[n("InSpec shell is based on a tool called "),B,n(". "),e("a",j,[Q,l(o)]),n(" is an interactive debugging environment for Ruby.")])]),J,K,l(i,{id:"87",data:[{id:"InSpec Shell Command"},{id:"Output - Enter the InSpec Shell"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("InSpec Shell Command")]),title1:s(({value:a,isActive:t})=>[n("Output - Enter the InSpec Shell")]),tab0:s(({value:a,isActive:t})=>[Z]),tab1:s(({value:a,isActive:t})=>[$]),_:1}),ee,l(i,{id:"98",data:[{id:"Command - help"},{id:"Output - help"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - help")]),title1:s(({value:a,isActive:t})=>[n("Output - help")]),tab0:s(({value:a,isActive:t})=>[ne]),tab1:s(({value:a,isActive:t})=>[se]),_:1}),ae,l(i,{id:"109",data:[{id:"Command"},{id:"Output"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command")]),title1:s(({value:a,isActive:t})=>[n("Output")]),tab0:s(({value:a,isActive:t})=>[te]),tab1:s(({value:a,isActive:t})=>[le]),_:1}),ie,l(i,{id:"130",data:[{id:"Command - describe block"},{id:"Output - describe block"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - describe block")]),title1:s(({value:a,isActive:t})=>[n("Output - describe block")]),tab0:s(({value:a,isActive:t})=>[oe]),tab1:s(({value:a,isActive:t})=>[ce]),_:1}),re,e("p",null,[n("You can also use the InSpec shell to explore resources, in addition to referencing the "),e("a",ue,[n("resource documentation"),l(o)]),n(". Here, we can use the InSpec shell to see how the "),de,n(" resource functions."),pe,n(" Run this command to list which methods are available to the "),me,n(" resource.")]),l(i,{id:"155",data:[{id:"Command - file resource"},{id:"Output - file resource"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - file resource")]),title1:s(({value:a,isActive:t})=>[n("Output - file resource")]),tab0:s(({value:a,isActive:t})=>[be]),tab1:s(({value:a,isActive:t})=>[he]),_:1}),ve,e("details",ke,[ge,e("div",_e,[fe,e("p",null,[n("Given what we have just learned, the "),ye,n(" in InSpec is to return something that evaluates to "),xe,n(" or "),we,n("."),Ie,n(" The "),Se,n(" (or "),Ae,n(" in InSpec) makes your method a Ruby Predicate Method. See "),e("a",Te,[n("Ruby predicate methods"),l(o)]),n(" to learn more.")])])]),Ne,l(i,{id:"200",data:[{id:"Command - resources"},{id:"Output - resources"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - resources")]),title1:s(({value:a,isActive:t})=>[n("Output - resources")]),tab0:s(({value:a,isActive:t})=>[Ce]),tab1:s(({value:a,isActive:t})=>[Re]),_:1}),Oe,l(i,{id:"211",data:[{id:"Command - nginx methods"},{id:"Output - nginx methods"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - nginx methods")]),title1:s(({value:a,isActive:t})=>[n("Output - nginx methods")]),tab0:s(({value:a,isActive:t})=>[Ee]),tab1:s(({value:a,isActive:t})=>[Ge]),_:1}),We,Xe,l(i,{id:"227",data:[{id:"Command - nginx version"},{id:"Output - nginx version"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - nginx version")]),title1:s(({value:a,isActive:t})=>[n("Output - nginx version")]),tab0:s(({value:a,isActive:t})=>[Fe]),tab1:s(({value:a,isActive:t})=>[Ye]),_:1}),De,l(i,{id:"238",data:[{id:"Command - nginx installed"},{id:"Output - nginx installed"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - nginx installed")]),title1:s(({value:a,isActive:t})=>[n("Output - nginx installed")]),tab0:s(({value:a,isActive:t})=>[He]),tab1:s(({value:a,isActive:t})=>[Ue]),_:1}),Le,l(i,{id:"259",data:[{id:"Command - docker"},{id:"Output - docker"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - docker")]),title1:s(({value:a,isActive:t})=>[n("Output - docker")]),tab0:s(({value:a,isActive:t})=>[Pe]),tab1:s(({value:a,isActive:t})=>[Me]),_:1}),qe,l(i,{id:"270",data:[{id:"Command - shell into container"},{id:"Alternate Command"},{id:"Output - shell into container"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - shell into container")]),title1:s(({value:a,isActive:t})=>[n("Alternate Command")]),title2:s(({value:a,isActive:t})=>[n("Output - shell into container")]),tab0:s(({value:a,isActive:t})=>[ze]),tab1:s(({value:a,isActive:t})=>[Ve]),tab2:s(({value:a,isActive:t})=>[Be]),_:1}),je,Qe,l(i,{id:"289",data:[{id:"Command - package installed"},{id:"Output - package installed"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - package installed")]),title1:s(({value:a,isActive:t})=>[n("Output - package installed")]),tab0:s(({value:a,isActive:t})=>[Je]),tab1:s(({value:a,isActive:t})=>[Ke]),_:1}),Ze,l(i,{id:"300",data:[{id:"Command - version"},{id:"Output - version"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - version")]),title1:s(({value:a,isActive:t})=>[n("Output - version")]),tab0:s(({value:a,isActive:t})=>[$e]),tab1:s(({value:a,isActive:t})=>[en]),_:1}),nn,l(i,{id:"311",data:[{id:"Command - nginx modules"},{id:"Output - nginx modules"}],"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("Command - nginx modules")]),title1:s(({value:a,isActive:t})=>[n("Output - nginx modules")]),tab0:s(({value:a,isActive:t})=>[sn]),tab1:s(({value:a,isActive:t})=>[an]),_:1}),e("details",tn,[ln,e("p",null,[n("The "),e("a",on,[n("nginx_conf"),l(o)]),n(" resource examines the contents of the NGINX configuration file, "),cn,n(".")])]),rn,l(i,{id:"330",data:[{id:"Command - file methods"},{id:"Output - file methods"}]},{title0:s(({value:a,isActive:t})=>[n("Command - file methods")]),title1:s(({value:a,isActive:t})=>[n("Output - file methods")]),tab0:s(({value:a,isActive:t})=>[un]),tab1:s(({value:a,isActive:t})=>[dn]),_:1}),pn,l(i,{id:"341",data:[{id:"Command - users methods"},{id:"Output - users methods"}]},{title0:s(({value:a,isActive:t})=>[n("Command - users methods")]),title1:s(({value:a,isActive:t})=>[n("Output - users methods")]),tab0:s(({value:a,isActive:t})=>[mn]),tab1:s(({value:a,isActive:t})=>[bn]),_:1}),hn])}const yn=u(m,[["render",vn],["__file","04.html.vue"]]);export{yn as default};
