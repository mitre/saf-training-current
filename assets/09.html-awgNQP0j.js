import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as n,f as a}from"./app-WeARUK1X.js";const t={},r=a(`<p>When updating the profile, you&#39;ll be making one of three types of changes:</p><ol><li><strong>Patch Update:</strong> These frequent updates cover missing corner cases of testing for one or more benchmark requirements, or improvements to the InSpec code for a requirement. These updates result in a new patch release of the benchmark, such as going from <code>v1.12.4</code> to <code>v1.12.5</code>. We aim to release these updates on a regular schedule, either weekly, bi-weekly, or monthly.</li><li><strong>Release Update:</strong> These updates occur when the STIG Benchmark owner releases an updated version of the STIG, for example, going from Red Hat Enterprise Linux V1R12 to V1R13.</li><li><strong>Major Version Update:</strong> These updates occur when a software vendor releases a new major version of their product&#39;s STIG. For example, when Red Hat releases version 9 of Red Hat Enterprise Linux or Microsoft releases a new major version of Windows, such as Windows 2024 or Windows 12.</li></ol><h3 id="scope-of-the-update-patterns" tabindex="-1"><a class="header-anchor" href="#scope-of-the-update-patterns" aria-hidden="true">#</a> Scope of the Update Patterns</h3><p>The STIGs and CIS Benchmarks are scoped within the Major Version of the software products they represent.</p><p>Updates or amendments to a Benchmark&#39;s requirements are tracked within the &#39;Releases&#39; of the Benchmark.</p><p>As we mentioned in the previous section, <em><strong>there is no concept of &#39;back-patching&#39;</strong></em>; it is a <em><strong>&#39;forward-only&#39;</strong></em> process.</p><p>Each requirement is indexed from their source SRG document, aligned to a CCI, and then given a unique <code>Rule ID</code> and <code>STIG ID</code> in the respective XCCDF Benchmark document.</p><p>Here is an example of various indices you may recognize:</p><div class="language-ruby line-numbers-mode" data-ext="rb"><pre class="language-ruby"><code>tag gtitle<span class="token operator">:</span> <span class="token string-literal"><span class="token string">&#39;SRG-OS-000480-GPOS-00227&#39;</span></span>
tag gid<span class="token operator">:</span> <span class="token string-literal"><span class="token string">&#39;V-230221&#39;</span></span>
tag rid<span class="token operator">:</span> <span class="token string-literal"><span class="token string">&#39;SV-230221r858734_rule&#39;</span></span>
tag stig_id<span class="token operator">:</span> <span class="token string-literal"><span class="token string">&#39;RHEL-08-010000&#39;</span></span>
tag fix_id<span class="token operator">:</span> <span class="token string-literal"><span class="token string">&#39;F-32865r567410_fix&#39;</span></span>
tag cci<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&#39;CCI-000366&#39;</span></span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),o=[r];function i(c,p){return s(),n("div",null,o)}const h=e(t,[["render",i],["__file","09.html.vue"]]);export{h as default};
